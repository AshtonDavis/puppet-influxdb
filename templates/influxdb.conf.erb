### Welcome to the InfluxDB configuration file.

# Once every 24 hours InfluxDB will report anonymous data to m.influxdb.com
# The data includes raft id (random 8 bytes), os, arch, version, and metadata.
# We don't track ip addresses of servers reporting. This is only used
# to track the number of instances running and the versions, which
# is very helpful for us.
# Change this option to true to disable reporting.
<% @main_section.sort_by{|key, value| key}.each_pair do |key, value| %>
  <%= key %> = <%= value %>
<% end %>

###
### [meta]
###
### Controls the parameters for the Raft consensus group that stores metadata
### about the InfluxDB cluster.
###

[meta]
<% @meta_section.sort_by{|key, value| key}.each_pair do |key, value| %>
  <%= key %> = <%= value %>
<% end %>


###
### [data]
###
### Controls where the actual shard data for InfluxDB lives and how it is
### flushed from the WAL. "dir" may need to be changed to a suitable place
### for your system, but the WAL settings are an advanced configuration. The
### defaults should work for most systems.
###

[data]
<% @data_section.sort_by{|key, value| key}.each_pair do |key, value| %>
  <%= key %> = <%= value %>
<% end %>

###
### [cluster]
###
### Controls non-Raft cluster behavior, which generally includes how data is
### shared across shards.
###

[cluster]
<% @cluster_section.sort_by{|key, value| key}.each_pair do |key, value| %>
  <%= key %> = <%= value %>
<% end %>

###
### [retention]
###
### Controls the enforcement of retention policies for evicting old data.
###

[retention]
<% @retention_section.sort_by{|key, value| key}.each_pair do |key, value| %>
  <%= key %> = <%= value %>
<% end %>


[shard-precreation]
<% @shard_pc_section.sort_by{|key, value| key}.each_pair do |key, value| %>
  <%= key %> = <%= value %>
<% end %>

###
### [admin]
###
### Controls the availability of the built-in, web-based admin interface.
###

[admin]
<% @admin_section.sort_by{|key, value| key}.each_pair do |key, value| %>
  <%= key %> = <%= value %>
<% end %>


###
### [http]
###
### Controls how the HTTP endpoints are configured. These are the primary
### mechanism for getting data into and out of InfluxDB.
###

[http]
# TODO TOMORROW: Figure out how to loop through the hash values.
<% @http_section.sort_by{|key, value| key}.each_pair do |key, value| %>
  <%= key %> = <%= value %>
<% end %>
###
### [[graphite]]
###
### Controls one or many listeners for Graphite data.
###
<% if scope['::influxdb::graphite_sections'] %>
   <% graphite_section = scope['::influxdb::graphite_sections'] %>
      <% graphite_section.sort_by{|key, value| key}.each do |section| %>
   [[graphite]]
      <%= section %>
   <% end %>
<% end %>

###
### [collectd]
###
### Controls the listener for collectd data.
###

[collectd]
<% @collectd_section.sort_by{|key, value| key}.each_pair do |key, value| %>
  <%= key %> = <%= value %>
<% end %>

###
### [opentsdb]
###
### Controls the listener for OpenTSDB data.
###

[opentsdb]
<% @opentsdb_section.sort_by{|key, value| key}.each_pair do |key, value| %>
  <%= key %> = <%= value %>
<% end %>

###
### [udp]
###
### Controls the listener for InfluxDB line protocol data via UDP.
###

[[udp]]
<% @udp_section.sort_by{|key, value| key}.each_pair do |key, value| %>
  <%= key %> = <%= value %>
<% end %>

###
### [monitoring]
###

[monitoring]
<% @monitoring_section.sort_by{|key, value| key}.each_pair do |key, value| %>
  <%= key %> = <%= value %>
<% end %>

###
### [continuous_queries]
###
### Controls how continuous queries are run within InfluxDB.
###

[continuous_queries]
<% @cqueries_section.sort_by{|key, value| key}.each_pair do |key, value| %>
  <%= key %> = <%= value %>
<% end %>

###
### [hinted-handoff]
###
### Controls the hinted handoff feature, which allows nodes to temporarily
### store queued data when one node of a cluster is down for a short period
### of time.
###

[hinted-handoff]
<% @hh_section.sort_by{|key, value| key}.each_pair do |key, value| %>
  <%= key %> = <%= value %>
<% end %>

